; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27026.1 

	TITLE	C:\Users\Michael McNally\source\repos\Final Proj\src\mainsrc\DiamondSquare.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	??0DiamondSquare@@QAE@XZ			; DiamondSquare::DiamondSquare
PUBLIC	??1DiamondSquare@@QAE@XZ			; DiamondSquare::~DiamondSquare
PUBLIC	?getArray@DiamondSquare@@QAEPAPAMXZ		; DiamondSquare::getArray
PUBLIC	?buildArray@DiamondSquare@@QAEXXZ		; DiamondSquare::buildArray
PUBLIC	?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	__real@3ee4f8b588e368f1
PUBLIC	__real@4164cccd
PUBLIC	__real@4167999a
PUBLIC	__real@41680000
PUBLIC	__real@41693333
PUBLIC	__real@416a0000
PUBLIC	__real@416a6666
PUBLIC	__real@416acccd
PUBLIC	__real@416b3333
PUBLIC	__real@416b999a
PUBLIC	__real@416c0000
PUBLIC	__real@416c6666
PUBLIC	__real@416d3333
PUBLIC	__real@416e0000
PUBLIC	__real@41700000
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	__fltused:DWORD
;	COMDAT ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??id$initializer$@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; ??id$initializer$@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __real@41700000
CONST	SEGMENT
__real@41700000 DD 041700000r			; 15
CONST	ENDS
;	COMDAT __real@416e0000
CONST	SEGMENT
__real@416e0000 DD 0416e0000r			; 14.875
CONST	ENDS
;	COMDAT __real@416d3333
CONST	SEGMENT
__real@416d3333 DD 0416d3333r			; 14.825
CONST	ENDS
;	COMDAT __real@416c6666
CONST	SEGMENT
__real@416c6666 DD 0416c6666r			; 14.775
CONST	ENDS
;	COMDAT __real@416c0000
CONST	SEGMENT
__real@416c0000 DD 0416c0000r			; 14.75
CONST	ENDS
;	COMDAT __real@416b999a
CONST	SEGMENT
__real@416b999a DD 0416b999ar			; 14.725
CONST	ENDS
;	COMDAT __real@416b3333
CONST	SEGMENT
__real@416b3333 DD 0416b3333r			; 14.7
CONST	ENDS
;	COMDAT __real@416acccd
CONST	SEGMENT
__real@416acccd DD 0416acccdr			; 14.675
CONST	ENDS
;	COMDAT __real@416a6666
CONST	SEGMENT
__real@416a6666 DD 0416a6666r			; 14.65
CONST	ENDS
;	COMDAT __real@416a0000
CONST	SEGMENT
__real@416a0000 DD 0416a0000r			; 14.625
CONST	ENDS
;	COMDAT __real@41693333
CONST	SEGMENT
__real@41693333 DD 041693333r			; 14.575
CONST	ENDS
;	COMDAT __real@41680000
CONST	SEGMENT
__real@41680000 DD 041680000r			; 14.5
CONST	ENDS
;	COMDAT __real@4167999a
CONST	SEGMENT
__real@4167999a DD 04167999ar			; 14.475
CONST	ENDS
;	COMDAT __real@4164cccd
CONST	SEGMENT
__real@4164cccd DD 04164cccdr			; 14.3
CONST	ENDS
;	COMDAT __real@3ee4f8b588e368f1
CONST	SEGMENT
__real@3ee4f8b588e368f1 DQ 03ee4f8b588e368f1r	; 1e-05
CONST	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??id$initializer$@?$numpunct@D@std@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; ??id$initializer$@?$numpunct@D@std@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 297  : 	__PURE_APPDOMAIN_GLOBAL locale::id numpunct<_Elem>::id;

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id'', COMDAT

; 1843 : 	__PURE_APPDOMAIN_GLOBAL locale::id num_put<_Elem, _OutIt>::id;

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\users\michael mcnally\source\repos\final proj\src\mainsrc\diamondsquare.cpp
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_j$2 = -8						; size = 4
_this$ = -4						; size = 4
?buildArray@DiamondSquare@@QAEXXZ PROC			; DiamondSquare::buildArray
; _this$ = ecx

; 29   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 30   : 	for (int i = 0; i < 129; i++)

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@buildArray
$LN2@buildArray:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN4@buildArray:
	cmp	DWORD PTR _i$1[ebp], 129		; 00000081H
	jge	SHORT $LN3@buildArray

; 31   : 	{
; 32   : 		for (int j = 0; j < 129; j++)

	mov	DWORD PTR _j$2[ebp], 0
	jmp	SHORT $LN7@buildArray
$LN5@buildArray:
	mov	ecx, DWORD PTR _j$2[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$2[ebp], ecx
$LN7@buildArray:
	cmp	DWORD PTR _j$2[ebp], 129		; 00000081H
	jge	SHORT $LN6@buildArray

; 33   : 		{
; 34   : 			heightArray[i][j] = i * j * j * 0.00001;

	mov	edx, DWORD PTR _i$1[ebp]
	imul	edx, DWORD PTR _j$2[ebp]
	imul	edx, DWORD PTR _j$2[ebp]
	cvtsi2sd xmm0, edx
	mulsd	xmm0, QWORD PTR __real@3ee4f8b588e368f1
	cvtsd2ss xmm0, xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _i$1[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _j$2[ebp]
	movss	DWORD PTR [eax+ecx*4], xmm0

; 35   : 			//i * j * j * 0.00001;
; 36   : 		}

	jmp	SHORT $LN5@buildArray
$LN6@buildArray:

; 37   : 	}

	jmp	SHORT $LN2@buildArray
$LN3@buildArray:

; 38   : 
; 39   : 	
; 40   : 	heightArray[0][0] = 14.5;

	mov	edx, 4
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, 4
	imul	ecx, ecx, 0
	mov	edx, DWORD PTR [edx+eax]
	movss	xmm0, DWORD PTR __real@41680000
	movss	DWORD PTR [ecx+edx], xmm0

; 41   : 	heightArray[0][4] = 15;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, 4
	shl	edx, 2
	mov	eax, DWORD PTR [eax+ecx]
	movss	xmm0, DWORD PTR __real@41700000
	movss	DWORD PTR [edx+eax], xmm0

; 42   : 	heightArray[4][0] = 15;

	mov	ecx, 4
	shl	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, 4
	imul	edx, edx, 0
	mov	eax, DWORD PTR [eax+ecx]
	movss	xmm0, DWORD PTR __real@41700000
	movss	DWORD PTR [edx+eax], xmm0

; 43   : 	heightArray[4][4] = 14.3;

	mov	ecx, 4
	shl	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, 4
	shl	edx, 2
	mov	eax, DWORD PTR [eax+ecx]
	movss	xmm0, DWORD PTR __real@4164cccd
	movss	DWORD PTR [edx+eax], xmm0

; 44   : 
; 45   : 	heightArray[2][2] = 14.7;

	mov	ecx, 4
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR [eax+ecx]
	movss	xmm0, DWORD PTR __real@416b3333
	movss	DWORD PTR [edx+eax], xmm0

; 46   : 
; 47   : 	heightArray[0][2] = 14.75;

	mov	ecx, 4
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR [ecx+edx]
	movss	xmm0, DWORD PTR __real@416c0000
	movss	DWORD PTR [eax+ecx], xmm0

; 48   : 	heightArray[2][0] = 14.75;

	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, 4
	imul	eax, eax, 0
	mov	ecx, DWORD PTR [ecx+edx]
	movss	xmm0, DWORD PTR __real@416c0000
	movss	DWORD PTR [eax+ecx], xmm0

; 49   : 	heightArray[2][4] = 14.65;

	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR [ecx+edx]
	movss	xmm0, DWORD PTR __real@416a6666
	movss	DWORD PTR [eax+ecx], xmm0

; 50   : 	heightArray[4][2] = 14.65;

	mov	edx, 4
	shl	edx, 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR [ecx+edx]
	movss	xmm0, DWORD PTR __real@416a6666
	movss	DWORD PTR [eax+ecx], xmm0

; 51   : 
; 52   : 	heightArray[1][1] = 14.675;

	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR [ecx+edx]
	movss	xmm0, DWORD PTR __real@416acccd
	movss	DWORD PTR [eax+ecx], xmm0

; 53   : 	heightArray[1][3] = 14.775;

	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, 4
	imul	eax, eax, 3
	mov	ecx, DWORD PTR [ecx+edx]
	movss	xmm0, DWORD PTR __real@416c6666
	movss	DWORD PTR [eax+ecx], xmm0

; 54   : 	heightArray[3][1] = 14.775;

	mov	edx, 4
	imul	eax, edx, 3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR [edx+eax]
	movss	xmm0, DWORD PTR __real@416c6666
	movss	DWORD PTR [ecx+edx], xmm0

; 55   : 	heightArray[3][3] = 14.575;

	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, 4
	imul	edx, edx, 3
	mov	eax, DWORD PTR [eax+ecx]
	movss	xmm0, DWORD PTR __real@41693333
	movss	DWORD PTR [edx+eax], xmm0

; 56   : 
; 57   : 	heightArray[0][1] = 14.625;

	mov	ecx, 4
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR [ecx+edx]
	movss	xmm0, DWORD PTR __real@416a0000
	movss	DWORD PTR [eax+ecx], xmm0

; 58   : 	heightArray[1][0] = 14.625;

	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, 4
	imul	eax, eax, 0
	mov	ecx, DWORD PTR [ecx+edx]
	movss	xmm0, DWORD PTR __real@416a0000
	movss	DWORD PTR [eax+ecx], xmm0

; 59   : 	heightArray[1][2] = 14.725;

	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR [ecx+edx]
	movss	xmm0, DWORD PTR __real@416b999a
	movss	DWORD PTR [eax+ecx], xmm0

; 60   : 	heightArray[2][1] = 14.725;

	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR [ecx+edx]
	movss	xmm0, DWORD PTR __real@416b999a
	movss	DWORD PTR [eax+ecx], xmm0

; 61   : 
; 62   : 	heightArray[0][3] = 14.875;

	mov	edx, 4
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, 4
	imul	ecx, ecx, 3
	mov	edx, DWORD PTR [edx+eax]
	movss	xmm0, DWORD PTR __real@416e0000
	movss	DWORD PTR [ecx+edx], xmm0

; 63   : 	heightArray[1][4] = 14.825;

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, 4
	shl	ecx, 2
	mov	edx, DWORD PTR [edx+eax]
	movss	xmm0, DWORD PTR __real@416d3333
	movss	DWORD PTR [ecx+edx], xmm0

; 64   : 	heightArray[2][3] = 14.675;

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, 4
	imul	ecx, ecx, 3
	mov	edx, DWORD PTR [edx+eax]
	movss	xmm0, DWORD PTR __real@416acccd
	movss	DWORD PTR [ecx+edx], xmm0

; 65   : 
; 66   : 	heightArray[3][0] = 14.875;

	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, 4
	imul	edx, edx, 0
	mov	eax, DWORD PTR [eax+ecx]
	movss	xmm0, DWORD PTR __real@416e0000
	movss	DWORD PTR [edx+eax], xmm0

; 67   : 	heightArray[4][1] = 14.825;

	mov	ecx, 4
	shl	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR [eax+ecx]
	movss	xmm0, DWORD PTR __real@416d3333
	movss	DWORD PTR [edx+eax], xmm0

; 68   : 	heightArray[3][2] = 14.675;

	mov	ecx, 4
	imul	edx, ecx, 3
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR [ecx+edx]
	movss	xmm0, DWORD PTR __real@416acccd
	movss	DWORD PTR [eax+ecx], xmm0

; 69   : 
; 70   : 	heightArray[3][4] = 14.475;

	mov	edx, 4
	imul	eax, edx, 3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, 4
	shl	ecx, 2
	mov	edx, DWORD PTR [edx+eax]
	movss	xmm0, DWORD PTR __real@4167999a
	movss	DWORD PTR [ecx+edx], xmm0

; 71   : 	heightArray[4][3] = 14.475;

	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, 4
	imul	ecx, ecx, 3
	mov	edx, DWORD PTR [edx+eax]
	movss	xmm0, DWORD PTR __real@4167999a
	movss	DWORD PTR [ecx+edx], xmm0

; 72   : 
; 73   : 
; 74   : 	
; 75   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?buildArray@DiamondSquare@@QAEXXZ ENDP			; DiamondSquare::buildArray
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\michael mcnally\source\repos\final proj\src\mainsrc\diamondsquare.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getArray@DiamondSquare@@QAEPAPAMXZ PROC		; DiamondSquare::getArray
; _this$ = ecx

; 24   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 25   : 	return heightArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 26   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?getArray@DiamondSquare@@QAEPAPAMXZ ENDP		; DiamondSquare::getArray
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\michael mcnally\source\repos\final proj\src\mainsrc\diamondsquare.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1DiamondSquare@@QAE@XZ PROC				; DiamondSquare::~DiamondSquare
; _this$ = ecx

; 20   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 21   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??1DiamondSquare@@QAE@XZ ENDP				; DiamondSquare::~DiamondSquare
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\michael mcnally\source\repos\final proj\src\mainsrc\diamondsquare.cpp
_TEXT	SEGMENT
$T1 = -16						; size = 4
$T2 = -12						; size = 4
_this$ = -8						; size = 4
_i$3 = -4						; size = 4
??0DiamondSquare@@QAE@XZ PROC				; DiamondSquare::DiamondSquare
; _this$ = ecx

; 9    : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 10   : 	heightArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 11   : 	heightArray = new float*[129];

	push	516					; 00000204H
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx

; 12   : 
; 13   : 	for(int i = 0; i < 129; i++)

	mov	DWORD PTR _i$3[ebp], 0
	jmp	SHORT $LN4@DiamondSqu
$LN2@DiamondSqu:
	mov	eax, DWORD PTR _i$3[ebp]
	add	eax, 1
	mov	DWORD PTR _i$3[ebp], eax
$LN4@DiamondSqu:
	cmp	DWORD PTR _i$3[ebp], 129		; 00000081H
	jge	SHORT $LN1@DiamondSqu

; 14   : 	{
; 15   : 		heightArray[i] = new float[129];

	push	516					; 00000204H
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _i$3[ebp]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [edx+eax*4], ecx

; 16   : 	}

	jmp	SHORT $LN2@DiamondSqu
$LN1@DiamondSqu:

; 17   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0DiamondSquare@@QAE@XZ ENDP				; DiamondSquare::DiamondSquare
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 111  : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 110  : 			: _Id(_Val)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 112  : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\michael mcnally\source\repos\final proj\src\mainsrc\diamondsquare.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\michael mcnally\source\repos\final proj\src\mainsrc\diamondsquare.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
